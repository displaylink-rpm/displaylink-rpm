diff -ru evdi-1.12.0-c/module/evdi_drm_drv.c evdi-1.12.0-d/module/evdi_drm_drv.c
--- evdi-1.12.0-c/module/evdi_drm_drv.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_drm_drv.c	2022-11-28 22:11:51.459566000 -0500
@@ -12,7 +12,7 @@
  */
 
 #include <linux/version.h>
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 #include <drm/drm_ioctl.h>
 #include <drm/drm_file.h>
 #include <drm/drm_drv.h>
@@ -24,7 +24,7 @@
 #if KERNEL_VERSION(5, 1, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #include <drm/drm_probe_helper.h>
 #endif
-#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #include <drm/drm_managed.h>
 #endif
 #include <drm/drm_atomic_helper.h>
@@ -146,7 +146,7 @@
 	.patchlevel = DRIVER_PATCH,
 };
 
-#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE || defined(EL8)
 static void evdi_drm_device_release_cb(__always_unused struct drm_device *dev,
 				       __always_unused void *ptr)
 {
@@ -192,7 +192,7 @@
 
 	drm_kms_helper_poll_init(dev);
 
-#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	ret = drmm_add_action_or_reset(dev, evdi_drm_device_release_cb, NULL);
 	if (ret)
 		goto err_fb;
diff -ru evdi-1.12.0-c/module/evdi_drm_drv.h evdi-1.12.0-d/module/evdi_drm_drv.h
--- evdi-1.12.0-c/module/evdi_drm_drv.h	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_drm_drv.h	2022-11-28 22:12:00.274730700 -0500
@@ -25,8 +25,8 @@
 #else
 #include <drm/drmP.h>
 #endif
-#if KERNEL_VERSION(5, 15, 0) <= LINUX_VERSION_CODE
-#include <drm/drm_legacy.h>
+#if KERNEL_VERSION(5, 15, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
+#include <drm/drm_framebuffer.h>
 #else
 #include <drm/drm_irq.h>
 #endif
diff -ru evdi-1.12.0-c/module/evdi_gem.c evdi-1.12.0-d/module/evdi_gem.c
--- evdi-1.12.0-c/module/evdi_gem.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_gem.c	2022-11-28 22:12:00.310068500 -0500
@@ -10,11 +10,11 @@
 
 #include <linux/sched.h>
 #include <linux/version.h>
-#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 #elif KERNEL_VERSION(5, 11, 0) <= LINUX_VERSION_CODE
 #include <linux/dma-buf-map.h>
 #endif
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 #include <drm/drm_prime.h>
 #include <drm/drm_file.h>
 #elif KERNEL_VERSION(5, 5, 0) <= LINUX_VERSION_CODE || defined(EL8)
@@ -27,7 +27,7 @@
 #include <linux/dma-buf.h>
 #include <drm/drm_cache.h>
 
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 MODULE_IMPORT_NS(DMA_BUF);
 #endif
 
@@ -62,10 +62,10 @@
 
 static bool evdi_drm_gem_object_use_import_attach(struct drm_gem_object *obj)
 {
-	if (!obj || !obj->import_attach)
+	if (!obj || !obj->import_attach || !obj->import_attach->dmabuf->owner)
 		return false;
 
-	return obj->import_attach && strcmp(obj->import_attach->dmabuf->owner->name, "amdgpu") != 0;
+	return strcmp(obj->import_attach->dmabuf->owner->name, "amdgpu") != 0;
 }
 
 uint32_t evdi_gem_object_handle_lookup(struct drm_file *filp,
@@ -291,7 +291,7 @@
 	int ret;
 
 	if (evdi_drm_gem_object_use_import_attach(&obj->base)) {
-#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 		struct iosys_map map = IOSYS_MAP_INIT_VADDR(NULL);
 #elif KERNEL_VERSION(5, 11, 0) <= LINUX_VERSION_CODE || defined(EL8)
 		struct dma_buf_map map = DMA_BUF_MAP_INIT_VADDR(NULL);
@@ -324,7 +324,7 @@
 void evdi_gem_vunmap(struct evdi_gem_object *obj)
 {
 	if (evdi_drm_gem_object_use_import_attach(&obj->base)) {
-#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 18, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 		struct iosys_map map = IOSYS_MAP_INIT_VADDR(NULL);
 
 		if (obj->vmap_is_iomem)
diff -ru evdi-1.12.0-c/module/evdi_ioc32.c evdi-1.12.0-d/module/evdi_ioc32.c
--- evdi-1.12.0-c/module/evdi_ioc32.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_ioc32.c	2022-11-28 22:12:00.321706800 -0500
@@ -22,7 +22,7 @@
 #include <linux/compat.h>
 
 #include <linux/version.h>
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 #include <drm/drm_ioctl.h>
 #elif KERNEL_VERSION(5, 5, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #else
@@ -62,10 +62,10 @@
 	if (copy_from_user(&req32, (void __user *)arg, sizeof(req32)))
 		return -EFAULT;
 
-#if KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE && KERNEL_VERSION(5, 14, 0) >= LINUX_VERSION_CODE || defined(EL8)
-	request = compat_alloc_user_space(sizeof(*request));
-#else
+#if KERNEL_VERSION(5, 15, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 	request = kmalloc(sizeof(*request), GFP_USER);
+#elif KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE
+	request = compat_alloc_user_space(sizeof(*request));
 #endif
 #if KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	if (!access_ok(request, sizeof(*request))
@@ -95,10 +95,10 @@
 	if (copy_from_user(&req32, (void __user *)arg, sizeof(req32)))
 		return -EFAULT;
 
-#if KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE && KERNEL_VERSION(5, 14, 0) >= LINUX_VERSION_CODE || defined(EL8)
-	request = compat_alloc_user_space(sizeof(*request));
-#else
+#if KERNEL_VERSION(5, 15, 0) <= LINUX_VERSION_CODE || defined(EL8) || defined(EL9)
 	request = kmalloc(sizeof(*request), GFP_USER);
+#elif KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE
+	request = compat_alloc_user_space(sizeof(*request));
 #endif
 #if KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	if (!access_ok(request, sizeof(*request))
diff -ru evdi-1.12.0-c/module/evdi_modeset.c evdi-1.12.0-d/module/evdi_modeset.c
--- evdi-1.12.0-c/module/evdi_modeset.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_modeset.c	2022-11-28 22:11:51.553776900 -0500
@@ -12,7 +12,7 @@
  */
 
 #include <linux/version.h>
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 #include <drm/drm_vblank.h>
 #include <drm/drm_damage_helper.h>
 #elif KERNEL_VERSION(5, 0, 0) <= LINUX_VERSION_CODE || defined(EL8)
@@ -29,7 +29,7 @@
 #include "evdi_drm_drv.h"
 #include "evdi_cursor.h"
 #include "evdi_params.h"
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #include <drm/drm_gem_atomic_helper.h>
 #else
 #include <drm/drm_gem_framebuffer_helper.h>
@@ -220,14 +220,14 @@
 };
 
 static void evdi_plane_atomic_update(struct drm_plane *plane,
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 				     struct drm_atomic_state *atom_state
 #else
 				     struct drm_plane_state *old_state
 #endif
 		)
 {
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	struct drm_plane_state *old_state = drm_atomic_get_old_plane_state(atom_state, plane);
 #else
 #endif
@@ -318,14 +318,14 @@
 }
 
 static void evdi_cursor_atomic_update(struct drm_plane *plane,
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 				     struct drm_atomic_state *atom_state
 #else
 				     struct drm_plane_state *old_state
 #endif
 		)
 {
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	struct drm_plane_state *old_state = drm_atomic_get_old_plane_state(atom_state, plane);
 #else
 #endif
@@ -395,7 +395,7 @@
 
 static const struct drm_plane_helper_funcs evdi_plane_helper_funcs = {
 	.atomic_update = evdi_plane_atomic_update,
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	.prepare_fb = drm_gem_plane_helper_prepare_fb
 #else
 	.prepare_fb = drm_gem_fb_prepare_fb
@@ -404,7 +404,7 @@
 
 static const struct drm_plane_helper_funcs evdi_cursor_helper_funcs = {
 	.atomic_update = evdi_cursor_atomic_update,
-#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 13, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	.prepare_fb = drm_gem_plane_helper_prepare_fb
 #else
 	.prepare_fb = drm_gem_fb_prepare_fb
@@ -538,7 +538,7 @@
 
 void evdi_modeset_cleanup(__maybe_unused struct drm_device *dev)
 {
-#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE || defined(EL8)
 #else
 	drm_mode_config_cleanup(dev);
 #endif
diff -ru evdi-1.12.0-c/module/evdi_painter.c evdi-1.12.0-d/module/evdi_painter.c
--- evdi-1.12.0-c/module/evdi_painter.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_painter.c	2022-11-28 22:11:51.608358500 -0500
@@ -10,7 +10,7 @@
 #include "linux/thread_info.h"
 #include "linux/mm.h"
 #include <linux/version.h>
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 #include <drm/drm_file.h>
 #include <drm/drm_vblank.h>
 #include <drm/drm_ioctl.h>
@@ -31,7 +31,7 @@
 
 #include <linux/dma-buf.h>
 
-#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 16, 0) <= LINUX_VERSION_CODE || defined(EL9)
 MODULE_IMPORT_NS(DMA_BUF);
 #endif
 
@@ -727,7 +727,7 @@
 static void evdi_log_pixel_format(uint32_t pixel_format,
 		char *buf, size_t size)
 {
-#if KERNEL_VERSION(5, 14, 0) <= LINUX_VERSION_CODE
+#if KERNEL_VERSION(5, 14, 0) <= LINUX_VERSION_CODE || defined(EL8)
 	snprintf(buf, size, "pixel format %p4cc", &pixel_format);
 #else
 	struct drm_format_name_buf format_name;
@@ -885,7 +885,7 @@
 
 	painter_lock(painter);
 
-        evdi->pixel_area_limit = pixel_area_limit;
+	evdi->pixel_area_limit = pixel_area_limit;
 	evdi->pixel_per_second_limit = pixel_per_second_limit;
 	painter->drm_filp = file;
 	kfree(painter->edid);
diff -ru evdi-1.12.0-c/module/evdi_platform_drv.c evdi-1.12.0-d/module/evdi_platform_drv.c
--- evdi-1.12.0-c/module/evdi_platform_drv.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_platform_drv.c	2022-11-28 22:11:51.620696400 -0500
@@ -12,7 +12,9 @@
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/dma-mapping.h>
+#ifdef CONFIG_USB_SUPPORT
 #include <linux/usb.h>
+#endif
 
 #include "evdi_params.h"
 #include "evdi_debug.h"
@@ -30,7 +32,9 @@
 	struct device *root_dev;
 	unsigned int dev_count;
 	struct platform_device *devices[EVDI_DEVICE_COUNT_MAX];
+#ifdef CONFIG_USB_SUPPORT
 	struct notifier_block usb_notifier;
+#endif
 	struct mutex lock;
 } g_ctx;
 
@@ -40,6 +44,7 @@
 #define evdi_platform_drv_context_unlock(ctx) \
 		mutex_unlock(&ctx->lock)
 
+#ifdef CONFIG_USB_SUPPORT
 static int evdi_platform_drv_usb(__always_unused struct notifier_block *nb,
 		unsigned long action,
 		void *data)
@@ -69,6 +74,7 @@
 	}
 	return 0;
 }
+#endif
 
 static int evdi_platform_drv_get_free_idx(struct evdi_platform_drv_context *ctx)
 {
@@ -213,11 +219,15 @@
 
 	memset(&g_ctx, 0, sizeof(g_ctx));
 	g_ctx.root_dev = root_device_register(DRIVER_NAME);
+#ifdef CONFIG_USB_SUPPORT
 	g_ctx.usb_notifier.notifier_call = evdi_platform_drv_usb;
+#endif
 	mutex_init(&g_ctx.lock);
 	dev_set_drvdata(g_ctx.root_dev, &g_ctx);
 
+#ifdef CONFIG_USB_SUPPORT
 	usb_register_notify(&g_ctx.usb_notifier);
+#endif
 	evdi_sysfs_init(g_ctx.root_dev);
 	ret = platform_driver_register(&evdi_platform_driver);
 	if (ret)
@@ -238,7 +248,9 @@
 
 	if (!PTR_ERR_OR_ZERO(g_ctx.root_dev)) {
 		evdi_sysfs_exit(g_ctx.root_dev);
+#ifdef CONFIG_USB_SUPPORT
 		usb_unregister_notify(&g_ctx.usb_notifier);
+#endif
 		dev_set_drvdata(g_ctx.root_dev, NULL);
 		root_device_unregister(g_ctx.root_dev);
 	}
diff -ru evdi-1.12.0-c/module/evdi_sysfs.c evdi-1.12.0-d/module/evdi_sysfs.c
--- evdi-1.12.0-c/module/evdi_sysfs.c	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/evdi_sysfs.c	2022-11-28 22:11:51.656906100 -0500
@@ -51,6 +51,7 @@
 	struct usb_device *usb;
 };
 
+#ifdef CONFIG_USB_SUPPORT
 static int evdi_platform_device_attach(struct device *device,
 		struct evdi_usb_addr *parent_addr);
 
@@ -166,6 +167,16 @@
 	return evdi_platform_device_add(device, parent);
 }
 
+#else /* !CONFIG_USB_SUPPORT */
+
+static ssize_t add_device_with_usb_path(struct device *dev,
+			 const char *buf, size_t count)
+{
+	return -EINVAL;
+}
+
+#endif /* CONFIG_USB_SUPPORT */
+
 static ssize_t add_store(struct device *dev,
 			 __always_unused struct device_attribute *attr,
 			 const char *buf, size_t count)
diff -ru evdi-1.12.0-c/module/Makefile evdi-1.12.0-d/module/Makefile
--- evdi-1.12.0-c/module/Makefile	2022-07-13 09:58:06.000000000 -0400
+++ evdi-1.12.0-d/module/Makefile	2022-11-28 22:11:51.667147000 -0500
@@ -11,6 +11,11 @@
 EL8FLAG := -DEL8
 endif
 
+EL9 := $(shell cat /etc/redhat-release 2>/dev/null | grep -c " 9." )
+ifneq (,$(findstring 1, $(EL9)))
+EL9FLAG := -DEL9
+endif
+
 Raspbian := $(shell grep -Eic 'raspb(erry|ian)' /proc/cpuinfo /etc/os-release 2>/dev/null )
 ifeq (,$(findstring 0, $(Raspbian)))
 RPIFLAG := -DRPI
@@ -22,7 +27,7 @@
 
 KERN_DIR := /lib/modules/$(KERNELRELEASE)/build
 
-ccflags-y := -Iinclude/drm $(EL8FLAG) $(RPIFLAG)
+ccflags-y := -Iinclude/drm $(EL8FLAG) $(EL9FLAG) $(RPIFLAG)
 evdi-y := evdi_platform_drv.o evdi_platform_dev.o evdi_sysfs.o evdi_modeset.o evdi_connector.o evdi_encoder.o evdi_drm_drv.o evdi_fb.o evdi_gem.o evdi_painter.o evdi_params.o evdi_cursor.o evdi_debug.o evdi_i2c.o
 evdi-$(CONFIG_COMPAT) += evdi_ioc32.o
 obj-m := evdi.o
@@ -45,7 +50,7 @@
 # inside kbuild
 # Note: this can be removed once it is in kernel tree and Kconfig is properly used
 CONFIG_DRM_EVDI := m
-ccflags-y := -isystem include/drm $(CFLAGS) $(EL8FLAG) $(RPIFLAG)
+ccflags-y := -isystem include/drm $(CFLAGS) $(EL8FLAG) $(EL9FLAG) $(RPIFLAG)
 evdi-y := evdi_platform_drv.o evdi_platform_dev.o evdi_sysfs.o evdi_modeset.o evdi_connector.o evdi_encoder.o evdi_drm_drv.o evdi_fb.o evdi_gem.o evdi_painter.o evdi_params.o evdi_cursor.o evdi_debug.o evdi_i2c.o
 evdi-$(CONFIG_COMPAT) += evdi_ioc32.o
 obj-$(CONFIG_DRM_EVDI) := evdi.o
